#include <Arduino.h>
#include <Servo.h>
#include <WiFiNINA.h>
#include <WiFiSSLClient.h>
#include <ArduinoHttpClient.h>

Servo servo;

// Define the pin numbers for the Arduino Nano 33 IoT
const int motorPin = 2;           // D2 - Compatible
const int triggerPin1 = 10;       // D10 - Compatible
const int echoPin1 = 11;          // D11 - Compatible
const int triggerPin = 5;         // D5 - Compatible
const int echoPin = 7;            // D7 - Compatible
const int ledPin15 = A5;          // A1 - Changed from D15
const int ledPin16 = A6;          // A2 - Changed from D16
const int ledPin17 = A7;          // A3 - Changed from D17

// WiFi credentials
char ssid[] = "Kaushik";       // your network SSID (name)
char pass[] = "123456789";   // your network password

// Server details
const char serverAddress[] = "172.20.10.10"; // Server IP address
int port = 5000;

WiFiClient wifi;
HttpClient client = HttpClient(wifi, serverAddress, port);

void setup() {
  pinMode(motorPin, OUTPUT);
  pinMode(triggerPin1, OUTPUT);
  pinMode(echoPin1, INPUT);
  pinMode(triggerPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(ledPin15, OUTPUT);
  pinMode(ledPin16, OUTPUT);
  pinMode(ledPin17, OUTPUT);

  servo.attach(2);
  servo.write(0);
  Serial.begin(9600);

  // Connect to WiFi
  Serial.print("Connecting to WiFi...");
  while (WiFi.begin(ssid, pass) != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("Connected!");
}

void loop() {
  long duration, distance, duration1, distance1;

  // Sensor 1
  digitalWrite(triggerPin1, LOW);
  delayMicroseconds(2);
  digitalWrite(triggerPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin1, LOW);
  duration1 = pulseIn(echoPin1, HIGH, 30000); // Timeout of 30ms
  if (duration1 == 0) {
    distance1 = -1; // Set distance to -1 if no echo is received
  } else {
    distance1 = duration1 / 29 / 2;  // Calculate distance in centimeters
  }

  // Sensor 2
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  duration = pulseIn(echoPin, HIGH, 30000); // Timeout of 30ms
  if (duration == 0) {
    distance = -1; // Set distance to -1 if no echo is received
  } else {
    distance = duration / 29 / 2;  // Calculate distance in centimeters
  }

  Serial.print("Distance1: ");
  Serial.println(distance1);
  Serial.print("Distance: ");
  Serial.println(distance);

  if (distance != -1 && distance < 45) {
    digitalWrite(motorPin, HIGH);
    delay(1000);
    servo.write(180);               
    delay(1000);
    servo.write(0);               
    digitalWrite(motorPin, LOW);
  }

  if (distance1 != -1) {
    if (distance1 > 30) {
      digitalWrite(ledPin15, LOW);
      digitalWrite(ledPin16, LOW);
      digitalWrite(ledPin17, LOW);
    } else if (distance1 > 17) {
      digitalWrite(ledPin15, HIGH);
      digitalWrite(ledPin16, LOW);
      digitalWrite(ledPin17, LOW);
    } else if (distance1 > 10) {
      digitalWrite(ledPin15, HIGH);
      digitalWrite(ledPin16, HIGH);
      digitalWrite(ledPin17, LOW);
    } else if (distance1 > 5) {
      digitalWrite(ledPin15, HIGH);
      digitalWrite(ledPin16, HIGH);
      digitalWrite(ledPin17, HIGH);
    } else {
      digitalWrite(ledPin15, LOW);
      digitalWrite(ledPin16, LOW);
      digitalWrite(ledPin17, LOW);
    }
  } else {
    digitalWrite(ledPin15, LOW);
    digitalWrite(ledPin16, LOW);
    digitalWrite(ledPin17, LOW);
  }

  sendDataToServer(distance1, distance);

  delay(1000);  // Adjust this delay as needed
}

void sendDataToServer(long distance1, long distance) {
  String postData = "distance1=" + String(distance1) + "&distance=" + String(distance);
  client.beginRequest();
  client.post("/data");
  client.sendHeader(HTTP_HEADER_CONTENT_TYPE, "application/x-www-form-urlencoded");
  client.sendHeader(HTTP_HEADER_CONTENT_LENGTH, postData.length());
  client.beginBody();
  client.print(postData);
  client.endRequest();

  int statusCode = client.responseStatusCode();
  String response = client.responseBody();

  Serial.print("Status code: ");
  Serial.println(statusCode);
  Serial.print("Response: ");
  Serial.println(response);
}
